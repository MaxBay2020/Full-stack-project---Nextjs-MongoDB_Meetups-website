{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  console.log(props.meetupData); // const {image, title, address, description}=props.meetupData\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}; // 因为这个页面是动态页面，且getStaticProps()函数是在build时生成静态页面的，\n// 因此next.js需要知道静态页面的这个meetupId是多少来预渲染\n// 因此getStaticPaths()函数就是用来告诉next.js，这个动态参数都有什么\n\n\nexport const getStaticPaths = async () => {\n  // 从数据库中获取数据的代码\n  const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); // 获取所有数据，但只保留_id这个字段，取值1\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    // 必须有fallback键，值是布尔值，一般写false\n    // false表示：下面的paths写死了，如果url超出了paths范围，会显示错误页面\n    // true表示：下面的paths没写死，如果url里面没有paths里的选项，不会报错，会自动生成一个页面\n    fallback: false,\n    // 必须有paths键，值是一个数组，里面是一个个的对象，每个对象必须有params键，值是一个对象\n    // 这里不应该hard code，要从数据库获取数据\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths:\n    //     [{\n    //     params: {\n    //         meetupId: 'm1' // 这里写可能的动态数据\n    //     }\n    // }, {\n    //     params: {\n    //         meetupId: 'm2'\n    //     }\n    // }]\n\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    meetupId\n  } = context.params; // 从数据库中获取数据的代码\n\n  const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); // 获取所有数据，但只保留_id这个字段，取值1\n\n  const getMeetupById = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: getMeetupById\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Volumes/Seagate Bac/学习材料/前端/我的练习/Nextjs/Youtub教学-Nextjs/Next.js Crash Course for Beginners 2021/nextjs-course-main-project/pages/[meetupId].js"],"names":["React","Fragment","useRouter","MeetupDetail","MongoClient","MeetupDetails","props","console","log","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","getMeetupById","findOne"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB,EAD6B,CAE7B;;AACA,sBACI,qCADJ;AAWH,CAdD,C,CAgBA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAE,YAAU;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,2GAApB,CAArB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CALmC,CAMnC;;AACA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAApB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACH;AACA;AACA;AACAC,IAAAA,QAAQ,EAAE,KAJP;AAKH;AACA;AACAC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB,CAPJ,CAYH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBG,GAAP;AAuBH,CAjCM;AAmCP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAiB;AAC3C,QAAM;AAACH,IAAAA;AAAD,MAAWG,OAAO,CAACJ,MAAzB,CAD2C,CAG3C;;AACA,QAAMd,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,2GAApB,CAArB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAP2C,CAQ3C;;AACA,QAAMe,aAAa,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAA5B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHd,IAAAA,KAAK,EAAE;AACHG,MAAAA,UAAU,EAAEqB;AADT;AADJ,GAAP;AAKH,CAlBM;AAoBP,eAAezB,aAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport {useRouter} from 'next/router'\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport {MongoClient} from 'mongodb'\n\nconst MeetupDetails = (props) => {\n    console.log(props.meetupData)\n    // const {image, title, address, description}=props.meetupData\n    return (\n        <>\n            {/*<MeetupDetail*/}\n            {/*    image={image}*/}\n            {/*    title={title}*/}\n            {/*    address={address}*/}\n            {/*    description={description}*/}\n            {/*/>*/}\n        </>\n\n);\n};\n\n// 因为这个页面是动态页面，且getStaticProps()函数是在build时生成静态页面的，\n// 因此next.js需要知道静态页面的这个meetupId是多少来预渲染\n// 因此getStaticPaths()函数就是用来告诉next.js，这个动态参数都有什么\nexport const getStaticPaths= async ()=>{\n    // 从数据库中获取数据的代码\n    const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db=client.db()\n\n    const meetupsCollection = db.collection('meetups')\n    // 获取所有数据，但只保留_id这个字段，取值1\n    const meetups=await meetupsCollection.find({}, {_id: 1}).toArray()\n\n    client.close()\n    return {\n        // 必须有fallback键，值是布尔值，一般写false\n        // false表示：下面的paths写死了，如果url超出了paths范围，会显示错误页面\n        // true表示：下面的paths没写死，如果url里面没有paths里的选项，不会报错，会自动生成一个页面\n        fallback: false,\n        // 必须有paths键，值是一个数组，里面是一个个的对象，每个对象必须有params键，值是一个对象\n        // 这里不应该hard code，要从数据库获取数据\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n        // paths:\n        //     [{\n        //     params: {\n        //         meetupId: 'm1' // 这里写可能的动态数据\n        //     }\n        // }, {\n        //     params: {\n        //         meetupId: 'm2'\n        //     }\n        // }]\n    }\n}\n\nexport const getStaticProps = async (context)=>{\n    const {meetupId}=context.params\n\n    // 从数据库中获取数据的代码\n    const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db=client.db()\n\n    const meetupsCollection = db.collection('meetups')\n    // 获取所有数据，但只保留_id这个字段，取值1\n    const getMeetupById = await meetupsCollection.findOne({_id: meetupId})\n\n    client.close()\n\n    return {\n        props: {\n            meetupData: getMeetupById\n        }\n    }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}