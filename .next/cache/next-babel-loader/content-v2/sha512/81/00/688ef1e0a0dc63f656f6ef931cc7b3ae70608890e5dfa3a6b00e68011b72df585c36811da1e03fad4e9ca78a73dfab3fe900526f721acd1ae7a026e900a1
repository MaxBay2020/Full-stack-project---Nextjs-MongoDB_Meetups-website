{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Seagate Bac/\\u5B66\\u4E60\\u6750\\u6599/\\u524D\\u7AEF/\\u6211\\u7684\\u7EC3\\u4E60/Nextjs/Youtub\\u6559\\u5B66-Nextjs/Next.js Crash Course for Beginners 2021/nextjs-course-main-project/pages/[meetupId].js\",\n    _this = this;\n\nimport React, { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  var image = props.image,\n      title = props.title,\n      address = props.address,\n      description = props.description;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg\",\n      title: \"A First Meetup\",\n      address: \"Some address\",\n      description: \"Some description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n}; // 因为这个页面是动态页面，且getStaticProps()函数是在build时生成静态页面的，\n// 因此next.js需要知道静态页面的这个meetupId是多少来预渲染\n// 因此getStaticPaths()函数就是用来告诉next.js，这个动态参数都有什么\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Volumes/Seagate Bac/学习材料/前端/我的练习/Nextjs/Youtub教学-Nextjs/Next.js Crash Course for Beginners 2021/nextjs-course-main-project/pages/[meetupId].js"],"names":["React","Fragment","useRouter","MeetupDetail","MeetupDetails","props","image","title","address","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MACtBC,KADsB,GACcD,KADd,CACtBC,KADsB;AAAA,MACfC,KADe,GACcF,KADd,CACfE,KADe;AAAA,MACRC,OADQ,GACcH,KADd,CACRG,OADQ;AAAA,MACCC,WADD,GACcJ,KADd,CACCI,WADD;AAE7B,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,KAAK,EAAC,0HADV;AAEI,MAAA,KAAK,EAAC,gBAFV;AAGI,MAAA,OAAO,EAAC,cAHZ;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH,CAbD,C,CAeA;AACA;AACA;;;KAjBML,a;;AA8DN,eAAeA,aAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport {useRouter} from 'next/router'\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport {MongoClient} from 'mongodb'\n\nconst MeetupDetails = (props) => {\n    const {image, title, address, description}=props\n    return (\n        <>\n            <MeetupDetail\n                image='https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg'\n                title='A First Meetup'\n                address='Some address'\n                description='Some description'\n            />\n        </>\n\n);\n};\n\n// 因为这个页面是动态页面，且getStaticProps()函数是在build时生成静态页面的，\n// 因此next.js需要知道静态页面的这个meetupId是多少来预渲染\n// 因此getStaticPaths()函数就是用来告诉next.js，这个动态参数都有什么\nexport const getStaticPaths= async ()=>{\n    // 从数据库中获取数据的代码\n    const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db=client.db()\n\n    const meetupsCollection = db.collection('meetups')\n    // 获取所有数据，但只保留_id这个字段，取值1\n    const meetups=await meetupsCollection.find({}, {_id: 1}).toArray()\n\n    return {\n        // 必须有fallback键，值是布尔值，一般写true\n        // false表示：下面的paths写死了，如果url超出了paths范围，会显示错误页面\n        // true表示：下面的paths没写死，如果url里面没有paths里的选项，不会报错，会自动生成一个页面\n        fallback: true,\n        // 必须有paths键，值是一个数组，里面是一个个的对象，每个对象必须有params键，值是一个对象\n        // 这里不应该hard code，要从数据库获取数据\n        paths: meetups.map((meetup, index) => ({\n            params: {\n                meetupId: index\n            }\n        }))\n    }\n}\n\nexport const getStaticProps = async (context)=>{\n    const {meetupId}=context.params\n    console.log(meetupId)\n\n\n\n    return {\n        props: {\n            meetupData: {\n                id: meetupId,\n                image:'https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg',\n                title:'A First Meetup',\n                address:'Some address',\n                description:'Some description'\n\n            }\n        }\n    }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}