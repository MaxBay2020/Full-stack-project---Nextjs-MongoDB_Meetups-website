{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Seagate Bac/\\u5B66\\u4E60\\u6750\\u6599/\\u524D\\u7AEF/\\u6211\\u7684\\u7EC3\\u4E60/Nextjs/Youtub\\u6559\\u5B66-Nextjs/Next.js Crash Course for Beginners 2021/nextjs-course-main-project/pages/[meetupId].js\";\nimport React, { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  const {\n    image,\n    title,\n    address,\n    description\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg\",\n      title: \"A First Meetup\",\n      address: \"Some address\",\n      description: \"Some description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // 因为这个页面是动态页面，且getStaticProps()函数是在build时生成静态页面的，\n// 因此next.js需要知道静态页面的这个meetupId是多少来预渲染\n// 因此getStaticPaths()函数就是用来告诉next.js，这个动态参数都有什么\n\n\nexport const getStaticPaths = async () => {\n  // 从数据库中获取数据的代码\n  const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); // 获取所有数据，但只保留_id这个字段，取值1\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    // 必须有fallback键，值是布尔值，一般写false\n    // false表示：下面的paths写死了，如果url超出了paths范围，会显示错误页面\n    // true表示：下面的paths没写死，如果url里面没有paths里的选项，不会报错，会自动生成一个页面\n    fallback: false,\n    // 必须有paths键，值是一个数组，里面是一个个的对象，每个对象必须有params键，值是一个对象\n    // 这里不应该hard code，要从数据库获取数据\n    paths: meetups.map((meetup, index) => ({\n      params: {\n        meetupId: ++index\n      }\n    })) // paths:\n    //     [{\n    //     params: {\n    //         meetupId: 'm1' // 这里写可能的动态数据\n    //     }\n    // }, {\n    //     params: {\n    //         meetupId: 'm2'\n    //     }\n    // }]\n\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    meetupId\n  } = context.params;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: 'https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg',\n        title: 'A First Meetup',\n        address: 'Some address',\n        description: 'Some description'\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Volumes/Seagate Bac/学习材料/前端/我的练习/Nextjs/Youtub教学-Nextjs/Next.js Crash Course for Beginners 2021/nextjs-course-main-project/pages/[meetupId].js"],"names":["React","Fragment","useRouter","MeetupDetail","MongoClient","MeetupDetails","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","index","params","meetupId","getStaticProps","context","console","log","meetupData","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAqCJ,KAA3C;AACA,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,KAAK,EAAC,0HADV;AAEI,MAAA,KAAK,EAAC,gBAFV;AAGI,MAAA,OAAO,EAAC,cAHZ;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH,CAbD,C,CAeA;AACA;AACA;;;AACA,OAAO,MAAMK,cAAc,GAAE,YAAU;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,2GAApB,CAArB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CALmC,CAMnC;;AACA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAApB;AAEA,SAAO;AACH;AACA;AACA;AACAC,IAAAA,QAAQ,EAAE,KAJP;AAKH;AACA;AACAC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,MAAoB;AACnCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,EAAEF;AADR;AAD2B,KAApB,CAAZ,CAPJ,CAYH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBG,GAAP;AAuBH,CAhCM;AAkCP,OAAO,MAAMG,cAAc,GAAG,MAAOC,OAAP,IAAiB;AAC3C,QAAM;AAACF,IAAAA;AAAD,MAAWE,OAAO,CAACH,MAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAIA,SAAO;AACHrB,IAAAA,KAAK,EAAE;AACH0B,MAAAA,UAAU,EAAE;AACRC,QAAAA,EAAE,EAAEN,QADI;AAERpB,QAAAA,KAAK,EAAC,0HAFE;AAGRC,QAAAA,KAAK,EAAC,gBAHE;AAIRC,QAAAA,OAAO,EAAC,cAJA;AAKRC,QAAAA,WAAW,EAAC;AALJ;AADT;AADJ,GAAP;AAYH,CAlBM;AAoBP,eAAeL,aAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport {useRouter} from 'next/router'\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport {MongoClient} from 'mongodb'\n\nconst MeetupDetails = (props) => {\n    const {image, title, address, description}=props\n    return (\n        <>\n            <MeetupDetail\n                image='https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg'\n                title='A First Meetup'\n                address='Some address'\n                description='Some description'\n            />\n        </>\n\n);\n};\n\n// 因为这个页面是动态页面，且getStaticProps()函数是在build时生成静态页面的，\n// 因此next.js需要知道静态页面的这个meetupId是多少来预渲染\n// 因此getStaticPaths()函数就是用来告诉next.js，这个动态参数都有什么\nexport const getStaticPaths= async ()=>{\n    // 从数据库中获取数据的代码\n    const client = await MongoClient.connect('mongodb+srv://wangxiaobei:13ULovEi14962464@cluster0.xpnhi.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db=client.db()\n\n    const meetupsCollection = db.collection('meetups')\n    // 获取所有数据，但只保留_id这个字段，取值1\n    const meetups=await meetupsCollection.find({}, {_id: 1}).toArray()\n\n    return {\n        // 必须有fallback键，值是布尔值，一般写false\n        // false表示：下面的paths写死了，如果url超出了paths范围，会显示错误页面\n        // true表示：下面的paths没写死，如果url里面没有paths里的选项，不会报错，会自动生成一个页面\n        fallback: false,\n        // 必须有paths键，值是一个数组，里面是一个个的对象，每个对象必须有params键，值是一个对象\n        // 这里不应该hard code，要从数据库获取数据\n        paths: meetups.map((meetup, index) => ({\n            params: {\n                meetupId: ++index\n            }\n        }))\n        // paths:\n        //     [{\n        //     params: {\n        //         meetupId: 'm1' // 这里写可能的动态数据\n        //     }\n        // }, {\n        //     params: {\n        //         meetupId: 'm2'\n        //     }\n        // }]\n    }\n}\n\nexport const getStaticProps = async (context)=>{\n    const {meetupId}=context.params\n    console.log(meetupId)\n\n\n\n    return {\n        props: {\n            meetupData: {\n                id: meetupId,\n                image:'https://upload.wikimedia.org/wikipedia/commons/1/15/Ontario_Legislative_Building%2C_Toronto%2C_South_view_20170417_1.jpg',\n                title:'A First Meetup',\n                address:'Some address',\n                description:'Some description'\n\n            }\n        }\n    }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}